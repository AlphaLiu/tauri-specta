/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__(cmd: string, args?: Record<string, unknown>): Promise<any>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

/**
 * HELLO
 * WORLD
 * !!!!
 */
export async function helloWorld(myName: string): Promise<string> {
return await invoke()("hello_world", { myName });
}

export async function goodbyeWorld(): Promise<string> {
return await invoke()("goodbye_world");
}

export async function someStruct(): Promise<MyStruct> {
return await invoke()("some_struct");
}

export async function hasError(): Promise<[string, undefined] | [undefined, number]> {
try {
    return [await invoke()("has_error"), undefined];
} catch (e: any) {
    if(e instanceof Error) throw e;
    else return [undefined, e];
}
}

export type MyStruct = { some_field: string }
